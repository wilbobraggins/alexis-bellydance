{
  "{\"sourceRoot\":\"/vagrant/src/alexis\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/vagrant/src/alexis\",\"filename\":\"/vagrant/src/alexis/gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/vagrant/src/alexis\",\"plugins\":[],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/vagrant/src/alexis",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/vagrant/src/alexis",
      "filename": "/vagrant/src/alexis/gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/vagrant/src/alexis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/vagrant/src/alexis/gulpfile.babel.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/vagrant/src/alexis/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/vagrant/src/alexis",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "import babel from 'gulp-babel';\nimport concat from 'gulp-concat';\nimport del from 'del';\nimport gulp from 'gulp';\nimport uglify from 'gulp-uglify';\nimport browserSync from 'browser-sync';\nconst server = browserSync.create();\nconst paths = {\n  scripts: {\n    src: 'src/scripts/*.js',\n    dest: 'dist/scripts/'\n  }\n};\n\nconst clean = () => del(['dist']);\n\nfunction scripts() {\n  return gulp.src(paths.scripts.src, {\n    sourcemaps: true\n  }).pipe(babel()).pipe(uglify()).pipe(concat('index.min.js')).pipe(gulp.dest(paths.scripts.dest));\n}\n\nfunction reload(done) {\n  server.reload();\n  done();\n}\n\nfunction serve(done) {\n  server.init({\n    server: {\n      baseDir: './'\n    }\n  });\n  done();\n}\n\nconst watch = () => gulp.watch(paths.scripts.src, gulp.series(scripts, reload));\n\nconst dev = gulp.series(clean, scripts, serve, watch);\nexport default dev;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbImJhYmVsIiwiY29uY2F0IiwiZGVsIiwiZ3VscCIsInVnbGlmeSIsImJyb3dzZXJTeW5jIiwic2VydmVyIiwiY3JlYXRlIiwicGF0aHMiLCJzY3JpcHRzIiwic3JjIiwiZGVzdCIsImNsZWFuIiwic291cmNlbWFwcyIsInBpcGUiLCJyZWxvYWQiLCJkb25lIiwic2VydmUiLCJpbml0IiwiYmFzZURpciIsIndhdGNoIiwic2VyaWVzIiwiZGV2Il0sIm1hcHBpbmdzIjoiQUFBQSxPQUFPQSxLQUFQLE1BQWtCLFlBQWxCO0FBQ0EsT0FBT0MsTUFBUCxNQUFtQixhQUFuQjtBQUNBLE9BQU9DLEdBQVAsTUFBZ0IsS0FBaEI7QUFDQSxPQUFPQyxJQUFQLE1BQWlCLE1BQWpCO0FBQ0EsT0FBT0MsTUFBUCxNQUFtQixhQUFuQjtBQUNBLE9BQU9DLFdBQVAsTUFBd0IsY0FBeEI7QUFFQSxNQUFNQyxNQUFNLEdBQUdELFdBQVcsQ0FBQ0UsTUFBWixFQUFmO0FBRUEsTUFBTUMsS0FBSyxHQUFHO0FBQ1pDLEVBQUFBLE9BQU8sRUFBRTtBQUNQQyxJQUFBQSxHQUFHLEVBQUUsa0JBREU7QUFFUEMsSUFBQUEsSUFBSSxFQUFFO0FBRkM7QUFERyxDQUFkOztBQU9BLE1BQU1DLEtBQUssR0FBRyxNQUFNVixHQUFHLENBQUMsQ0FBQyxNQUFELENBQUQsQ0FBdkI7O0FBRUEsU0FBU08sT0FBVCxHQUFtQjtBQUNqQixTQUFPTixJQUFJLENBQUNPLEdBQUwsQ0FBU0YsS0FBSyxDQUFDQyxPQUFOLENBQWNDLEdBQXZCLEVBQTRCO0FBQUVHLElBQUFBLFVBQVUsRUFBRTtBQUFkLEdBQTVCLEVBQ0pDLElBREksQ0FDQ2QsS0FBSyxFQUROLEVBRUpjLElBRkksQ0FFQ1YsTUFBTSxFQUZQLEVBR0pVLElBSEksQ0FHQ2IsTUFBTSxDQUFDLGNBQUQsQ0FIUCxFQUlKYSxJQUpJLENBSUNYLElBQUksQ0FBQ1EsSUFBTCxDQUFVSCxLQUFLLENBQUNDLE9BQU4sQ0FBY0UsSUFBeEIsQ0FKRCxDQUFQO0FBS0Q7O0FBRUQsU0FBU0ksTUFBVCxDQUFnQkMsSUFBaEIsRUFBc0I7QUFDcEJWLEVBQUFBLE1BQU0sQ0FBQ1MsTUFBUDtBQUNBQyxFQUFBQSxJQUFJO0FBQ0w7O0FBRUQsU0FBU0MsS0FBVCxDQUFlRCxJQUFmLEVBQXFCO0FBQ25CVixFQUFBQSxNQUFNLENBQUNZLElBQVAsQ0FBWTtBQUNWWixJQUFBQSxNQUFNLEVBQUU7QUFDTmEsTUFBQUEsT0FBTyxFQUFFO0FBREg7QUFERSxHQUFaO0FBS0FILEVBQUFBLElBQUk7QUFDTDs7QUFFRCxNQUFNSSxLQUFLLEdBQUcsTUFBTWpCLElBQUksQ0FBQ2lCLEtBQUwsQ0FBV1osS0FBSyxDQUFDQyxPQUFOLENBQWNDLEdBQXpCLEVBQThCUCxJQUFJLENBQUNrQixNQUFMLENBQVlaLE9BQVosRUFBcUJNLE1BQXJCLENBQTlCLENBQXBCOztBQUVBLE1BQU1PLEdBQUcsR0FBR25CLElBQUksQ0FBQ2tCLE1BQUwsQ0FBWVQsS0FBWixFQUFtQkgsT0FBbkIsRUFBNEJRLEtBQTVCLEVBQW1DRyxLQUFuQyxDQUFaO0FBQ0EsZUFBZUUsR0FBZiIsInNvdXJjZVJvb3QiOiIvdmFncmFudC9zcmMvYWxleGlzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJhYmVsIGZyb20gJ2d1bHAtYmFiZWwnO1xuaW1wb3J0IGNvbmNhdCBmcm9tICdndWxwLWNvbmNhdCc7XG5pbXBvcnQgZGVsIGZyb20gJ2RlbCc7XG5pbXBvcnQgZ3VscCBmcm9tICdndWxwJztcbmltcG9ydCB1Z2xpZnkgZnJvbSAnZ3VscC11Z2xpZnknO1xuaW1wb3J0IGJyb3dzZXJTeW5jIGZyb20gJ2Jyb3dzZXItc3luYyc7XG5cbmNvbnN0IHNlcnZlciA9IGJyb3dzZXJTeW5jLmNyZWF0ZSgpO1xuXG5jb25zdCBwYXRocyA9IHtcbiAgc2NyaXB0czoge1xuICAgIHNyYzogJ3NyYy9zY3JpcHRzLyouanMnLFxuICAgIGRlc3Q6ICdkaXN0L3NjcmlwdHMvJ1xuICB9XG59O1xuXG5jb25zdCBjbGVhbiA9ICgpID0+IGRlbChbJ2Rpc3QnXSk7XG5cbmZ1bmN0aW9uIHNjcmlwdHMoKSB7XG4gIHJldHVybiBndWxwLnNyYyhwYXRocy5zY3JpcHRzLnNyYywgeyBzb3VyY2VtYXBzOiB0cnVlIH0pXG4gICAgLnBpcGUoYmFiZWwoKSlcbiAgICAucGlwZSh1Z2xpZnkoKSlcbiAgICAucGlwZShjb25jYXQoJ2luZGV4Lm1pbi5qcycpKVxuICAgIC5waXBlKGd1bHAuZGVzdChwYXRocy5zY3JpcHRzLmRlc3QpKTtcbn1cblxuZnVuY3Rpb24gcmVsb2FkKGRvbmUpIHtcbiAgc2VydmVyLnJlbG9hZCgpO1xuICBkb25lKCk7XG59XG5cbmZ1bmN0aW9uIHNlcnZlKGRvbmUpIHtcbiAgc2VydmVyLmluaXQoe1xuICAgIHNlcnZlcjoge1xuICAgICAgYmFzZURpcjogJy4vJ1xuICAgIH1cbiAgfSk7XG4gIGRvbmUoKTtcbn1cblxuY29uc3Qgd2F0Y2ggPSAoKSA9PiBndWxwLndhdGNoKHBhdGhzLnNjcmlwdHMuc3JjLCBndWxwLnNlcmllcyhzY3JpcHRzLCByZWxvYWQpKTtcblxuY29uc3QgZGV2ID0gZ3VscC5zZXJpZXMoY2xlYW4sIHNjcmlwdHMsIHNlcnZlLCB3YXRjaCk7XG5leHBvcnQgZGVmYXVsdCBkZXY7Il19",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "babel",
        "concat",
        "del",
        "gulp",
        "uglify",
        "browserSync",
        "server",
        "create",
        "paths",
        "scripts",
        "src",
        "dest",
        "clean",
        "sourcemaps",
        "pipe",
        "reload",
        "done",
        "serve",
        "init",
        "baseDir",
        "watch",
        "series",
        "dev"
      ],
      "mappings": "AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,MAAMC,MAAM,GAAGD,WAAW,CAACE,MAAZ,EAAf;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,OAAO,EAAE;AACPC,IAAAA,GAAG,EAAE,kBADE;AAEPC,IAAAA,IAAI,EAAE;AAFC;AADG,CAAd;;AAOA,MAAMC,KAAK,GAAG,MAAMV,GAAG,CAAC,CAAC,MAAD,CAAD,CAAvB;;AAEA,SAASO,OAAT,GAAmB;AACjB,SAAON,IAAI,CAACO,GAAL,CAASF,KAAK,CAACC,OAAN,CAAcC,GAAvB,EAA4B;AAAEG,IAAAA,UAAU,EAAE;AAAd,GAA5B,EACJC,IADI,CACCd,KAAK,EADN,EAEJc,IAFI,CAECV,MAAM,EAFP,EAGJU,IAHI,CAGCb,MAAM,CAAC,cAAD,CAHP,EAIJa,IAJI,CAICX,IAAI,CAACQ,IAAL,CAAUH,KAAK,CAACC,OAAN,CAAcE,IAAxB,CAJD,CAAP;AAKD;;AAED,SAASI,MAAT,CAAgBC,IAAhB,EAAsB;AACpBV,EAAAA,MAAM,CAACS,MAAP;AACAC,EAAAA,IAAI;AACL;;AAED,SAASC,KAAT,CAAeD,IAAf,EAAqB;AACnBV,EAAAA,MAAM,CAACY,IAAP,CAAY;AACVZ,IAAAA,MAAM,EAAE;AACNa,MAAAA,OAAO,EAAE;AADH;AADE,GAAZ;AAKAH,EAAAA,IAAI;AACL;;AAED,MAAMI,KAAK,GAAG,MAAMjB,IAAI,CAACiB,KAAL,CAAWZ,KAAK,CAACC,OAAN,CAAcC,GAAzB,EAA8BP,IAAI,CAACkB,MAAL,CAAYZ,OAAZ,EAAqBM,MAArB,CAA9B,CAApB;;AAEA,MAAMO,GAAG,GAAGnB,IAAI,CAACkB,MAAL,CAAYT,KAAZ,EAAmBH,OAAnB,EAA4BQ,KAA5B,EAAmCG,KAAnC,CAAZ;AACA,eAAeE,GAAf",
      "sourceRoot": "/vagrant/src/alexis",
      "sourcesContent": [
        "import babel from 'gulp-babel';\nimport concat from 'gulp-concat';\nimport del from 'del';\nimport gulp from 'gulp';\nimport uglify from 'gulp-uglify';\nimport browserSync from 'browser-sync';\n\nconst server = browserSync.create();\n\nconst paths = {\n  scripts: {\n    src: 'src/scripts/*.js',\n    dest: 'dist/scripts/'\n  }\n};\n\nconst clean = () => del(['dist']);\n\nfunction scripts() {\n  return gulp.src(paths.scripts.src, { sourcemaps: true })\n    .pipe(babel())\n    .pipe(uglify())\n    .pipe(concat('index.min.js'))\n    .pipe(gulp.dest(paths.scripts.dest));\n}\n\nfunction reload(done) {\n  server.reload();\n  done();\n}\n\nfunction serve(done) {\n  server.init({\n    server: {\n      baseDir: './'\n    }\n  });\n  done();\n}\n\nconst watch = () => gulp.watch(paths.scripts.src, gulp.series(scripts, reload));\n\nconst dev = gulp.series(clean, scripts, serve, watch);\nexport default dev;"
      ]
    },
    "sourceType": "module",
    "mtime": 1554694894000
  },
  "{\"sourceRoot\":\"/vagrant/src/alexis\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/vagrant/src/alexis\",\"filename\":\"/vagrant/src/alexis/gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/vagrant/src/alexis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/vagrant/src/alexis",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/vagrant/src/alexis",
      "filename": "/vagrant/src/alexis/gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/vagrant/src/alexis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/vagrant/src/alexis/gulpfile.babel.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/vagrant/src/alexis/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/vagrant/src/alexis",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar server = _browserSync[\"default\"].create();\n\nfunction reload(done) {\n  server.reload();\n  done();\n}\n\nfunction serve(done) {\n  server.init({\n    server: {\n      baseDir: './'\n    }\n  });\n  done();\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbInNlcnZlciIsImJyb3dzZXJTeW5jIiwiY3JlYXRlIiwicmVsb2FkIiwiZG9uZSIsInNlcnZlIiwiaW5pdCIsImJhc2VEaXIiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7QUFDQSxJQUFNQSxNQUFNLEdBQUdDLHdCQUFZQyxNQUFaLEVBQWY7O0FBRUEsU0FBU0MsTUFBVCxDQUFnQkMsSUFBaEIsRUFBc0I7QUFDcEJKLEVBQUFBLE1BQU0sQ0FBQ0csTUFBUDtBQUNBQyxFQUFBQSxJQUFJO0FBQ0w7O0FBRUQsU0FBU0MsS0FBVCxDQUFlRCxJQUFmLEVBQXFCO0FBQ25CSixFQUFBQSxNQUFNLENBQUNNLElBQVAsQ0FBWTtBQUNWTixJQUFBQSxNQUFNLEVBQUU7QUFDTk8sTUFBQUEsT0FBTyxFQUFFO0FBREg7QUFERSxHQUFaO0FBS0FILEVBQUFBLElBQUk7QUFDTCIsInNvdXJjZVJvb3QiOiIvdmFncmFudC9zcmMvYWxleGlzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJyb3dzZXJTeW5jIGZyb20gJ2Jyb3dzZXItc3luYyc7XG5jb25zdCBzZXJ2ZXIgPSBicm93c2VyU3luYy5jcmVhdGUoKTtcblxuZnVuY3Rpb24gcmVsb2FkKGRvbmUpIHtcbiAgc2VydmVyLnJlbG9hZCgpO1xuICBkb25lKCk7XG59XG5cbmZ1bmN0aW9uIHNlcnZlKGRvbmUpIHtcbiAgc2VydmVyLmluaXQoe1xuICAgIHNlcnZlcjoge1xuICAgICAgYmFzZURpcjogJy4vJ1xuICAgIH1cbiAgfSk7XG4gIGRvbmUoKTtcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "server",
        "browserSync",
        "create",
        "reload",
        "done",
        "serve",
        "init",
        "baseDir"
      ],
      "mappings": ";;AAAA;;;;AACA,IAAMA,MAAM,GAAGC,wBAAYC,MAAZ,EAAf;;AAEA,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AACpBJ,EAAAA,MAAM,CAACG,MAAP;AACAC,EAAAA,IAAI;AACL;;AAED,SAASC,KAAT,CAAeD,IAAf,EAAqB;AACnBJ,EAAAA,MAAM,CAACM,IAAP,CAAY;AACVN,IAAAA,MAAM,EAAE;AACNO,MAAAA,OAAO,EAAE;AADH;AADE,GAAZ;AAKAH,EAAAA,IAAI;AACL",
      "sourceRoot": "/vagrant/src/alexis",
      "sourcesContent": [
        "import browserSync from 'browser-sync';\nconst server = browserSync.create();\n\nfunction reload(done) {\n  server.reload();\n  done();\n}\n\nfunction serve(done) {\n  server.init({\n    server: {\n      baseDir: './'\n    }\n  });\n  done();\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1554746829000
  }
}